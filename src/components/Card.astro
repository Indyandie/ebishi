---
const { letter } = Astro.props
const emoji = letter.emoji
const word = letter.word
const char = word[0]
---

<script>
  const cards = document.querySelectorAll('.swipe-card')

  const cardSwipe = (card, index) => {
    let touchstartX
    let touchendX
    let tcDiff = 0
    let tcCurr
    let tcMoveStart
    let scrollCurr = window.innerWidth * index

    card.addEventListener('touchstart', updateTouchStart, { passive: true })

    function updateTouchStart(e) {
      touchstartX = e.changedTouches[0].screenX
      tcMoveStart = touchstartX

      document.body.setAttribute('style', `scroll-behavior: unset;`)

      card.addEventListener('touchmove', moveCard, { passive: true })

      card.addEventListener('touchend', endTouch)
    }

    const moveCard = (e) => {
      tcCurr = e.changedTouches[0].screenX
      let tcMoveDiff = tcMoveStart - tcCurr
      // card.setAttribute("style", `transition: unset; margin-left: ${tcDiff}px`)
      document.body.scrollBy(tcMoveDiff, 0)
      tcMoveStart = tcCurr
    }

    const endTouch = (e) => {
      touchendX = e.changedTouches[0].screenX
      checkDirection()

      card.removeEventListener('touchmove', moveCard, { passive: true })
    }

    const checkDirection = () => {
      tcDiff = touchstartX - touchendX
      document.body.setAttribute('style', `scroll-behavior: smooth;`)

      // swipe left
      if (tcDiff < 0) {
        let lScroll = scrollCurr - window.innerWidth
        document.body.scrollTo(lScroll, 0)
      }

      // swipe right
      if (tcDiff > 0) {
        let rScroll = window.innerWidth + scrollCurr
        document.body.scrollTo(rScroll, 0)
      }

      // card.scrollIntoView()

      card.removeEventListener('touchend', endTouch)
    }
  }

  cards.forEach((crd, i) => {
    cardSwipe(crd, i)
  })
</script>

<section class="swipe-card">
  <h1>{`${char.repeat(2)}`}</h1>
  <figure>
    {emoji}
  </figure>
  <p>
    {word}
  </p>
</section>

<style>
  section {
    background-color: #494b7a;
    color: #fff;
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    touch-action: pan-x;
    /* animation: test 2500ms ease-in infinite; */
  }

  @-webkit-keyframes test {
    50% {
      margin-left: 0;
    }
  }

  h1 {
    text-transform: capitalize;
    font-size: 120px;
    margin: 0;
  }

  figure {
    font-size: 180px;
    display: flex;
    margin: 0;
  }

  p {
    font-size: 48px;
  }
</style>
